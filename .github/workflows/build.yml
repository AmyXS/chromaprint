name: Test and package

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fft:
        - avfft
        - fftw3
        - fftw3f
        - kissfft
    env:
      FFT_LIB: ${{ matrix.fft }}
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install yasm cmake libavcodec-dev libavformat-dev libavutil-dev \
          libavresample-dev libfftw3-dev libgtest-dev
    - name: Test with ${{ env.FFT_LIB }}
      run: |
        mkdir build.test.$FFT_LIB
        cd build.test.$FFT_LIB
        cmake -DCMAKE_BUILD_TYPE=Release -DFFT_LIB=$FFT_LIB -DBUILD_TESTS=ON -DBUILD_TOOLS=ON ..
        make VERBOSE=1
        make check VERBOSE=1

  test-macos:
    runs-on: macos-latest
    env:
      FFT_LIB: vdsp
    steps:
    - uses: actions/checkout@v1
    - name: Download googletest sources
      run: |
        git clone https://github.com/google/googletest.git "$GITHUB_WORKSPACE/googletest"
        echo "::set-env name=GTEST_ROOT::$GITHUB_WORKSPACE/googletest/googletest"
    - name: Test with ${{ env.FFT_LIB }}
      run: |
        mkdir build.test.$FFT_LIB
        cd build.test.$FFT_LIB
        cmake -DCMAKE_BUILD_TYPE=Release -DFFT_LIB=$FFT_LIB -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS='-stdlib=libc++' ..
        make VERBOSE=1
        make check VERBOSE=1

  package:
    runs-on: ubuntu-latest
    container: quay.io/acoustid/chromaprint-build-base:xenial
    strategy:
      matrix:
        component:
        - lib
        - fpcalc
        os:
        - linux
        - windows
        arch:
        - x86_64
    env:
      OS: ${{ matrix.os }}
      ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v1
    - name: Package ${{ env.ARCH }} ${{ env.OS }}
      run: ./package/build-${{ matrix.component }}.sh
    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: chromaprint-${{ matrix.component }}-${{ env.OS }}-${{ env.ARCH }}
        path: chromaprint-${{ env.OS }}-${{ env.ARCH }}/

  package-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        component:
        - lib
        - fpcalc
        arch:
        - x86_64
    env:
      OS: macos
      ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v1
    - name: Package ${{ env.ARCH }} ${{ env.OS }}
      run: ./package/build-${{ matrix.component }}.sh
    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: chromaprint-${{ matrix.component }}-${{ env.OS }}-${{ env.ARCH }}
        path: chromaprint-${{ env.OS }}-${{ env.ARCH }}/

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - package
      - package-macos
    steps:
      - uses: actions/checkout@v1
      - name: Set version
        run: |
          TAG=${GITHUB_REF##*/}
          echo "::set-env name=TAG::$TAG"
          echo "::set-env name=VERSION::$(echo $TAG | sed 's/^v//')"
      - uses: actions/download-artifact@v1
        with:
          name: chromaprint-fpcalc-linux-x86_64
          path: artifacts/chromaprint-fpcalc-${{ env.VERSION }}-linux-x86_64/
      - uses: actions/download-artifact@v1
        with:
          name: chromaprint-fpcalc-windows-x86_64
          path: artifacts/chromaprint-fpcalc-${{ env.VERSION }}-windows-x86_64/
      - uses: actions/download-artifact@v1
        with:
          name: chromaprint-fpcalc-macos-x86_64
          path: artifacts/chromaprint-fpcalc-${{ env.VERSION }}-macos-x86_64/
      - uses: actions/download-artifact@v1
        with:
          name: chromaprint-lib-linux-x86_64
          path: artifacts/chromaprint-lib-${{ env.VERSION }}-linux-x86_64/
      - uses: actions/download-artifact@v1
        with:
          name: chromaprint-lib-windows-x86_64
          path: artifacts/chromaprint-lib-${{ env.VERSION }}-windows-x86_64/
      - uses: actions/download-artifact@v1
        with:
          name: chromaprint-lib-macos-x86_64
          path: artifacts/chromaprint-lib-${{ env.VERSION }}-macos-x86_64/
      - name: Make source tarball
        run: |
          mkdir artifacts/release/
          git archive --format=tar.gz --prefix=chromaprint-$TAG/ $TAG > artifacts/release/chromaprint-$VERSION.tar.gz
      - name: Make tarballs
        run: |
          cd artifacts/
          dirs=$(find . -name 'chromaprint-*-*-macos-*' -o -name 'chromaprint-*-*-linux-*' -type d)
          for dir in $dirs
          do
            name=$(basename $dir)
            chmod +x $dir/fpcalc
            tar cvzf release/$name.tar.gz $dir
          done
      - name: Make zips
        run: |
          cd artifacts/
          dirs=$(find . -name 'chromaprint-*-*-windows-*' -type d)
          for dir in $dirs
          do
            name=$(basename $dir)
            zip release/$name.zip $dir/*
          done
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
